name: Update Open API Docs

on:
  push:
    branches:
      - release

jobs:
  update-open-api-doc-links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.email "robots@place.technology"
          git config --global user.name "PlaceOS Robot"

      - name: Retrieve Version
        id: get_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Update OPEN API Doc Links
        shell: bash
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          set -e  # Exit if any command fails

          submodules=("services/rest-api" "services/staff-api")

          for submodule in "${submodules[@]}"; do
            cd "$submodule"
            git fetch
            commit_id=$(git rev-parse HEAD)
            module_name=$(basename "$submodule")
            cd - > /dev/null

            cd "swagger/$module_name"
            git checkout master
            git pull origin master

            new_url="https://raw.githubusercontent.com/PlaceOS/${module_name}/${commit_id}/OPENAPI_DOC.yml"
            input_file="versions.json"
            temp_file=$(mktemp)

            jq --arg version "$VERSION" --arg new_url "$new_url" \
              'to_entries | (.[0:1] + [{"key": $version, "value": $new_url}] + .[1:]) | from_entries' \
              "$input_file" > "$temp_file"

            mv "$temp_file" "$input_file"

            git add versions.json
            git commit -m "build: update for $VERSION"
            git push origin master

            cd ../../
          done
