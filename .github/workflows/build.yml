name: Build

on:
  # Tempory manual dispatch for testing
  workflow_dispatch:
    inputs:
      version:
        description: 'Platform Version'
        required: true

jobs:
  platform-info:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.introspect.outputs.services }}
    name: Prepare
    steps:
    - name: Checkout release
      uses: actions/checkout@v2
    - name: Discover services
      id:   introspect
      run: |
        echo ::set-output name=services::$(
          git submodule status -- services |
            jq -Rnc '. |= [ inputs[1:] | split(" ") |
              {
                name: .[1]|ltrimstr("services/"),
                sha:  .[0],
                path: .[1]
              }
            ]'
        )

  build-services:
    needs: platform-info
    strategy:
      matrix:
        service: ${{ fromJson(needs.platform-info.outputs.services) }}
    runs-on: ubuntu-latest
    name: Build ${{ matrix.service.name }}
    steps:
    - name: Checkout release
      uses: actions/checkout@v2
    - name: Checkout ${{ matrix.service.name }}
      run: |
        git submodule init -- ${{ matrix.service.path }}
        git submodule update
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
#   - name: Login to DockerHub
#     uses: docker/login-action@v1
#     with:
#       username: ${{ secrets.DOCKERHUB_USERNAME }}
#       password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.service.path }}
        file: ${{ matrix.service.path }}/Dockerfile
        # push: true
        tags: placeos/${{ matrix.service.name }}:${{ github.event.inputs.version }}
        build-args: PLACE_COMMIT=${{ github.sha }}
